<Project Sdk="Microsoft.NET.Sdk">
	
  <PropertyGroup>
    <!-- Select the framework(s) you wish to target.
        Rhino 6: net45
        Rhino 7: net48
        Rhino 8 Windows: net48, net7.0, net7.0-windows, net7.0-windows10.0.22000.0, etc
        Rhino 8 Mac: net7.0, net7.0-macos, net7.0-macos12.0, etc
    -->
    <TargetFramework>net7.0</TargetFramework>
    <EnableDynamicLoading>true</EnableDynamicLoading>
    <TargetExt>.rhp</TargetExt>
    <NoWarn>NU1701</NoWarn>
  </PropertyGroup>
  
  <PropertyGroup>
    <!-- Specifies information for Assembly and Yak -->
    <Version>1.0</Version>
    <Title>SnailAI</Title>
    <Company>SnailAI Authors</Company>
    <Description>Description of SnailAI</Description>
    <ApplicationIcon>Resources\SnailAI.ico</ApplicationIcon>
  </PropertyGroup>
  
  <ItemGroup>
    <EmbeddedResource Include="Resources\SnailAI.ico">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </EmbeddedResource>
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="Grasshopper" Version="8.0.23304.9001" ExcludeAssets="runtime" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="System.Drawing.Common" Version="8.0.10" />
    <PackageReference Include="System.Resources.Extensions" Version="8.0.0" />
  </ItemGroup>
  
  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  
  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <!-- Target to run the inline task -->
  <Target Name="InjectApiKey" BeforeTargets="BeforeBuild">
    <!-- Read the API key from the file -->
    <ReadLinesFromFile File="$(ProjectDir)../../fal_api_key.txt">
        <Output TaskParameter="Lines" ItemName="FalApiKeyLines" />
    </ReadLinesFromFile>

    <ItemGroup>
      <FalApiKeyLines>
        <LineText>%(Identity)</LineText>
      </FalApiKeyLines>
    </ItemGroup>

    <PropertyGroup>
      <APIKey>@(FalApiKeyLines->'%(LineText)')</APIKey>
      <SecretsFile>
      // This is a generated file, do not add to source control!!!
      namespace SnailAI%3b
      
      public partial class FalClientSettings
      {
          public const string ApiKey = "$(APIKey)"%3b
      }
      </SecretsFile>
    </PropertyGroup>
    <!-- Display the created property -->
    <Message Importance="high" Text="API_Key: $(APIKey)" />
  
    <!-- Execute the inline task to generate FalClientSettings.Secrets.cs -->
    <WriteLinesToFile
          File="$(ProjectDir)FalClientSettings.Secrets.cs"
          Lines="$(SecretsFile)"
          Overwrite="true"
          WriteOnlyWhenDifferent="true" />  
    
  </Target>
  
  <Target Name="CopyConfigToBin" AfterTargets="Build">
    <Copy SourceFiles="$(ProjectDir)../../falConfig.json" DestinationFolder="$(OutDir)"/>
  </Target>



</Project>